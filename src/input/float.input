--Copyright The Numerical Algorithms Group Limited 1991.

-- this demonstrates Floats and the result of changing precision
)clear all
-- look at 28 digits of accuracy (default is 20)
digits 28
p := numeric %pi
a := 163.0
b := sqrt a
-- following appears to be an integer
exp(p * b)
-- increase the precision to 60 and recalculate
digits 60
p := numeric %pi
a := 163.0
b := sqrt a
exp(p * b)
c := cos(p/12)
-- we have enough precision to get 0 in following
16*c^4 - 16*c^2 + 1
-- look at PI to 200 places
numeric(%pi, 200)

)clear all
f := 2.0/3
log exp f
asin sin f
acos cos f
atan tan f
asinh sinh f
acosh cosh f
atanh tanh f
sqrt(f^2)
4*atan(1.0)-%pi
log exp1()
exp log2()
exp log10()

-- check results of rounding, truncation etc. on negative floats
f := -9.6571
log exp f
sqrt(f^2)
ceiling f
floor f
truncate(f)
fractionPart(f)
wholePart f
round(f)

f := 100.0/7
exp log f
sqrt(f^2)
sin(f)^2+cos(f)^2
sinh(f)^2-cosh(f)^2
truncate f
round f
fractionPart f
ceiling f
floor f
wholePart f

digits 50
f := 1.0/3
exp log f
asin sin f
acos cos f
atan tan f
asinh sinh f
acosh cosh f
atanh tanh f
log exp1()
sin numeric %pi
exp log2()
exp log10()

f := 1024.0
log2 f
f := 1000.0
log10 f
